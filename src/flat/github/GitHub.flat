package flat/github

import flat/github/models/Repo

import flat/http/Http
import flat/json/JsonDeserializer
import flat/datastruct/HashMap

class {
  static String API_ROOT = "https://api.github.com"

  public static async getOrganizationRepos(
    String organization
  ) -> Repo[] {
    var Int page = 1
    let perPage = 100

    let allRepos = Repo[]

    while (true) {
      let url = "#{API_ROOT}/orgs/#{organization}/repos?page=#{page++}&per_page=#{perPage}"
      let headers = HashMap()
        :add("Accept", "application/json")
        :add("Content-Type", "text/plain")
        :add("User-Agent", "flat-github-client")

      let response = Http.get(url, headers: headers)

      let Array<HashMap<String, Object>> data = JsonDeserializer().parseArray(response.data)

      allRepos.addAll(data.map({ Repo(_) }))

      if (data.count < perPage) break
    }

    return allRepos
  }
}
