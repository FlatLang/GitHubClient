package flat/github/models

import flat/datastruct

class {
    static String URL_PREFIX = "https://api.github.com/repos/"

    visible String ownerName {
        get {
            return ownerNameAndRepositoryName.split('/')[0]
        }
    }

    visible String repositoryName {
        get {
            return ownerNameAndRepositoryName.split('/')[1]
        }
    }

    visible String ownerNameAndRepositoryName {
        get {
            let rest = url.substring(URL_PREFIX.count)
            let slash = rest.indexOf('/')
            let endSlash = rest.indexOf('/', start: slash + 1)
            return rest.substring(end: endSlash)
        }
    }

    public construct(
        HashMap<String, Object> map
    ) {
        this(
            id: ((Long)map["id"]).value,
            nodeId: (String)map["node_id"],
            name: (String)map["name"],
            path: (String)map["path"],
            state: (String)map["state"],
            createdAt: (String)map["created_at"],
            updatedAt: (String)map["updated_at"],
            url: (String)map["url"],
            htmlUrl: (String)map["html_url"],
            badgeUrl: (String)map["badge_url"]
        )
    }

    public construct(
        visible Long id,
        visible String nodeId,
        visible String name,
        visible String path,
        visible String state,
        visible String createdAt,
        visible String updatedAt,
        visible String url,
        visible String htmlUrl,
        visible String badgeUrl
    ) {}

    override public toJson(Bool: format = false, String: tab = "\t") -> String {
        return "{\"id\":#{id.toJson()},\"node_id\":#{nodeId.toJson()},\"name\":#{name.toJson()},\"path\":#{path.toJson()},\"state\":#{state.toJson()},\"created_at\":#{createdAt.toJson()},\"updated_at\":#{updatedAt.toJson()},\"url\":#{url.toJson()},\"html_url\":#{htmlUrl.toJson()},\"badge_url\":#{badgeUrl.toJson()}}"
    }
}
